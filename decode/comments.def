#
#	Comments file
#
1	{start} **__Dungeon Campaign by Robert Clardy. Reverse engineered by Paul Robson 2017
5   {delaytwosec} * Delay two seconds
6   {delaysec} * Delay a second
7   {delayhalfsec} * Delay half a second
10  {drawSquare} *Draw Square, current colour, current position.
11 	{convertPosition} * Convert xPos,yPos to position in maze, contents and screen position
12  {findEmptySlot} * Find an empty slot (upper digit is zero)
13  {openSquareRoom} * Find a square which is the upper left of open four
14  {} erase on the display
15  {} on first two levels, make the first one a gas area (9x)
16  {openSquareWalls} remove walls to make a square. move to one of the 4 squares randomly.
18  {readKeyboardGasCheck} *_Read Keyboard Checking for Gas
20  {noKey}No check for gas if there is none and not the serpent boss, move serpent ? back if count not mod =0
25  {} dec gas count , loop back if not time out or counter not mod 0
30  {} one of the party dies, back to prompt.
40  {moveSerpent} *Move the serpent. info = direction. Pick a move in one of the directions
41  {} if off screen try other direction
42  {} check head got player (5), check wall and gas (9)
45  {} move serpent graphic, clear tail, move others down one.
47  {} come here if trying other way fails.
50  {} serpent ate a party member
55  {} erase the serpent. (Doesn't check if party zero size)
60  {} trying a direction fails ; try the other one ; if already done that (m = 0) pick a random direction.
500 {moveSpectre} *Move the Spectre. Just floats about chasing you.
600 {drawEraseSpectre} *Draw the Spectre
620 {drawSpectreRoutine} *Draw Spectre check for player.
625 {eraseSpectreRoutine} *Erase Spectre check for player.
700 {spectreGotParty} *Spectre got party
705 {removeSpectre} Erase the Spectre
769 {initialise} *_Initialise Game
770 {} display title page (poke 50,63 is inverse poke 50,127 is normal)
780 {} *install machine code for sound see sound.asm and music.ods
801 {createMaze} *_Create the maze
802 {} *dimension 13x13x4 maze and fill with '3' (wall right and below)
1001 {} *Do for each level.
1003 {} Fill whole screen with the correct background colour (visuals only)
1030 {} *Find the start position
1035 {nextClear} * Clear the next square in the maze. When done set all non-open walls to -63

1040 {clearOneSquare} * Clear a single square in the maze.
1050 {} figure out which way we can go e.g. is there a wall there ?
1080 {} if there is a used square near by, find a new starting point
1110 {tryMoveDirection} dispatch to movers
1130 {} try to move right
1140 {} try to move down
1150 {} try to move left
1160 {} try to move up
1170 {newStartPoint} * Find a new start point as we can't go any further.
1200 {doRooms} * Create 5 square rooms. 3-5 have treasure in them (7x)
1205 {} * Put pits (2x) necro/ptero (3x) monster/w treasure (8x) stairs (5x) monster no treasure (4x)
1212 {} Pits, check there is something to fall through to.
1215 {} No stairs on L1
1220 {} One treasureless monster.
1260 {} * Special stuff Level 4. Find position on edge. Find start position
1265 {} Draw Frame
1290 {} Get monster Names
1500 {prompt} *Prompt for command, check for gas
1501 {getCommand} *Get command, update bosses if not invisible.
1520 {executeCommand} Execute Command
1560 {displayCommands} Display command list

2000 {moveRight} * Move Right
2020 {moveCode} *_General Move Code (validated in maze). Erase if dwarf dead, animate movement, do actual move.
2100 {} Reconvert position. , if not in gas 
2102 {} * Make Gas area visible Look in [-1,-1] [0,-1] [-1,0] [0,0] for gas
2105 {} Draw gas cells
2110 {} Redraw player
2120 {completeMove} *Show walls, update dragon count, if jumping do it again w/o checks
2130 {checkMoveResult} get new maze contents, handle stairs (5) or stairs on next level (+169)
2145 {} if elf dead then no warning.
2150 {} check in four directions for pit trap/necromancer/pterodactyl
2160 {reportDanger} report danger near
2170 {exitMove} * Check what you hit : monster (4 or 8) 2 (pit) 3 (necro/ptero)
2500 {moveLeft} * Move Left
3000 {moveUp} * Move Up
3500 {moveDown} * Move Down
3700 {jump} *Jump Hazard
3740 {displayStatus} *Display Status
3755 {flyOnCarpet} * Fly on Magic Carpet
3760 {} only horizontal or vertical
3765 {} reached a wall, change direction
3770 {} animate the movement vertically
3775 {} update map/pos , keep going until key pressed, go to monster if monster was in play
3780 {} animate the movement horizontally
3900 {takeInvisibilityPotion} *Take invisibility potion
4000 {eraseDisplayedWalls} *Erase displayed walls unless below visible
4002 {hideAndDraw} *Hide current square as first time, draw it.
4005 {drawDisplayedWalls} *Draw displayed walls 
4010 {} exit if already drawn and not stairs, stop automap if dwarf dead
4015 {} vertical wall
4010 {drawRaw} draw current cell
4020 {} vertical wall square to left
4030 {} horizontal wall square above
4040 {} horizontal wall this square
4110 {stairsHandler} *Handle Stairs
4115 {} open up either up or down space.
4120 {} ask if using stairs
4130 {} if yes, little tune
4145 {} update values & enter new level
4150 {enterNewLevel} *Enter a new level, reset evrything
4160 {} draw the frame
4170 {} redraw the bits we've already seen.
4220 {} draw exit if required.
4250 {checkBossMonster} *_Check for boss monster / Create Spectre
4255 {} *Display Information
4256 {createSerpent} *Create Serpent. Find empty slot, assign to [8]
4257 {} for each segment find a move that's open and store that in [7]-[1]
4258 {} draw it, announce it, fix up variables with player.
4259 {exitBossMonster} exit boss monster creation
4260 {createDragon} *Create Dragon
4265 {} Find empty slot for dragon, at least six squares away. Fix back and update player pos
4267 {} announce warning message
4270 {} play sound , click speaker repeatedly.
4310 {searchTreasure} *Search for treasure
4325 {foundTreasure} found treasure (7) w/monster (8), do sfx and gfx. remove it / convert to monster
4328 {} work out treasure value
4335 {} other things we might have found.
4370 {} show stairways
4380 {} show treasure
4390 {} show monsters
4400 {} display other hazards
4410 {} magic sword
4420 {} show current level
4510 {foundMonster} *_Bumped into monster
4521 {} work out strength and type of monster
4522 {} continue announcements
4550 {attackMonster} *_Now in monster fight
4800 {necroPtero} *Bumped into necromancer/pterodactyl
4801 {} alternate message, there's no other difference.
4802 {} play a little tune
4805 {} find an empty slot in random place / draw new level / check result of move there.
4910 {pitTrap} *Bumped into pit trap
4920 {} special case on the bottom level,men lost. pick level to go to
4942 {} update position and go there.
4950 {pitBottomLevel} at the bottom we lose men, which might be fatal.
5000 {moveFail} *Bumped into solid wall, sfx and recheck.
5045 {recalcCheck} *Recalculate and check
5050 {noiseGetCmd} SFX and get next command
6000 {exitMaze} *Exit the Maze
6005 {} Play victory tune
6006 {} Victory Status
7000 {moveDragon} *Move Dragon. Figure out which way it can go.
7002 {} top level safe at the top.
7005 {} chase the player, if move ok skip out
7015 {} forced directional move.
7018 {} pick only horiz or vertical where both available.
7020 {} animate the move
7030 {} return if not at player else fall through into bumped into dragon.
8000 {foundDragon} *Bumped into dragon
8300 {colourCodes} *Display Colour Codes
8325 {allDied} *Party has been wiped out.

# 0 nothing x1 wall right x2 wall below x3 wall right and below
# 2x pit trap 3x necromancer/pterodactyl 4x monster (no treasure) 5x stairs 6x rock 7x treasure
# 8x monster with treasure 9x gas , -ve if not displayed yet.


# TODO:
# 4550-4750 	Battle



